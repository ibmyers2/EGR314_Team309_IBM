{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My HMI Webpage","text":"","tags":["tag1","tag2"]},{"location":"#team-introduction","title":"Team Introduction","text":"<p>Project: STEM Demonstration</p> <p>Team 309B</p> <p>Team Website</p> <p>Members</p> <ul> <li>Baron Guido</li> <li>Bruce Myers</li> </ul> <p>Preparation Date: January 16</p> <p>Spring 2025</p> <p>ASU, EGR 314, Prof. Nichols</p>","tags":["tag1","tag2"]},{"location":"API/","title":"API","text":""},{"location":"API/#message-type-breakdown","title":"Message Type Breakdown","text":"<p>Toggle Motor(Type 1):</p> Byte # Byte 1-2 Byte 3 Byte 4 Byte 5-6 Byte 7-8 Variable Name msgPref MotorD_Sender MotorD_Reciever Motor_Data msgSuf Variable Type uint16_t uint_8 uint_8 uint16_t uint16_t Minimum Value AZ M B 0x0040 YB Maximum Value AZ M B 0x0041 YB Example Value AZ M B 0x0040 YB <p>Team IDs:</p> Team Member Set IDs Bruce Myers M Baron Guido B"},{"location":"Block%20Diagram/","title":"Block Diagram","text":""},{"location":"Block%20Diagram/#components","title":"Components","text":"<p>-ESP32 Microcontroller</p> <p>-Voltage Regulator (3.3V)</p> <p>-Pushbutton</p> <p>-HMI Pushbuttons</p> <p>-OLED Screen</p> <p>-9V 1A Battery Power Supply</p> <p>Block Diagram:</p> <p></p>"},{"location":"Block%20Diagram/#decision-making-process","title":"Decision Making Process","text":"<p>Since my main responsibility for my team was to make the human machine interface, I decided that the best selection for the microcontroller would be the ESP32. This is because the ESP is I2C compatible, which would work well with many of the OLED screen options I would have to choose from. The ESP is also capable of Wifi communication, which is the method of communication between the rest of the system and me. For the buttons, the regular pushbuttons were simple surface mount buttons that didn't take up much space. For the HMI buttons, these were selected later on to be more user-friendly and more appealing. The OLED screen is one that I was more familiar with and met the simplicity of our project.</p>"},{"location":"Component%20Selection%20and%20Power%20Budget/","title":"Component Selection and Power Budget","text":""},{"location":"Component%20Selection%20and%20Power%20Budget/#component-selection","title":"Component Selection","text":"<p>OLED Screen:</p> Potential Solution Pros Cons AOM12864A0-1.54WWDigikey Link -$17.60-I2C Compatible communication-Lightweight, 1.5-inch screen size-Max 45 mA current -15V required for display NHD-1.8-160128UBC3Digikey Link -3.3V max power-Lightweight, 1.8-inch screen size -200-250 mA current-$25.91-Not I2C Compatible Teyleten Robot 0.96 inch LCD OLED Display Board Module 12864 128X64 IIC I2C SSD1306 Driver 4 Pins for Raspberry Pi ArduinoAmazon Link -I2C compatible-$12.88 for 5-3V-5V-Low power rating -Smaller screen <p>Optimal Solution: Teyleten Robot 0.96 inch LCD OLED Display Board Module 12864 128X64 IIC I2C SSD1306 Driver 4 Pins for Raspberry Pi Arduino</p> <p>Rationale: While smaller than the others, this screen will be very affordable and can be replaced easily if something is not done properly. It also is compatible with the other components in the system. The information that we will need to display should fit on the screen, so this screen will be optimal for the system.</p> <p>3.3V Voltage Regulator:</p> Potential Solution Pros Cons LMR50410Y3FQDBVRQ1Digikey Link -Smaller in size-Less pins-38 V Max Input-1A output-$1.47 -Closer pins, may make soldering more difficult LM2575-3.3WU-TRDigikey Link -$1.75-40V Input-1A Output-All pins on 1 side, easier to design for PCB -Closer pins, may be difficult to solder LM2675MX-3.3/NOPBDigikey Link -45V Input-1A Output-Easier to solder -$4.36-More pins <p>Optimal Solution: LM2675MX-3.3/NOPB</p> <p>Rationale: While more expensive, this voltage regulator will be easier to solder than the other much smaller components with more difficult pins. This will also allow for more room for traces on the PCB. It has a well-within-range voltage requirement and enough amperage for the system.</p> <p>Power Supply:</p> Potential Solution Pros Cons WR9HD1333CCP-F(R6B)Digikey Link -$3.94-9V Output-1.33 A Output-Barrel Jack cord -Wall-connected-Cord must reach into subsystem to power 1300mAh High Capacity Lithium-ion Long Lasting 9 Volt BatteriesAmazon Link -Portable-9V Output-1.3A Output-Can be incorporated into the system for no outer cords -$11.98 (for 2)-Ships quickly through Amazon-No build-in connector 9 Volt DC, 1 Amp Power Adapter with 5.5mm Barrel Jack, 2.1mm Inner DiameterElexp Link -Barrel Jack Connector-9V Output-1.3A Output -$5.95-Not shipped through Digikey/Amazon-Wall Connected-Cord must reach into subsystem to power <p>Optimal Solution: 1300mAh High Capacity Lithium-ion Long Lasting 9 Volt Batteries</p> <p>Rationale: The Portable battery that is shown would be the best option of the three because our presentation for the Innovation showcase will be made significantly smoother with the use of a portable power supply. We will not have to worry about cords outside of the system, as we can make a shell and have the battery and barrel jack adapter built within the system. We can also purchase only a few packs of these and can recharge them for multiple uses, which is better than buying many batteries.</p> <p>Microcontroller Selection</p> <p>Requirements: -1 I2C communication pin -2 UART communication pins -Multiple GPIO pins</p> <p>First Microcontroller consideration: ESP32-S3-WROOM-1-N4</p> ESP Info Answer Model ESP32-S3-WROOM-1-N4 Product Page URL Digikey Link ESP32-S3-WROOM-1-N4 Datasheet URL ESP32-S3-WROOM-1-N4 Datasheet Link ESP32 S3 Datasheet URL ESP32 S3 Datasheet ESP32 S3 Technical Reference Manual URL ESP32 S3 Technical Reference Manual Vendor Link Espressif Systems Link Code Examples Code Examples External resources URL(s) Getting started with ESP32ESP32 Overview Unit Cost $2.95 Absolute Maximum Current for entire IC 0.5A Supply Voltage Range 3.0-3.6V Maximum GPIO current (per pin) 10nA Support External Interrupts? Yes Require Programming Hardware, Cost, URL None <p>Highlights: The ESP32 will be able to do more than enough for the system that needs to be created. There is an array of GPIO pins that also work as I2C pins, so there is little need to worry about the OLED\u2019s positioning. These GPIO pins also work well with the pushbuttons that may need to be used. The required current is also half of what will be accessible, which leaves another 0.5A for the other components. This microcontroller also has the proper UART communication that is needed for using Wifi to establish communication between the human interface and other systems.</p> <p>Pin Info:</p> <p> </p> <p>Team Role:</p> <p>As the member of the team that is responsible for the human interface system, I will have a few primary responsibilities. The first of these is going to be making sure my system is powered. Since it will be its standalone system compared to to spinning top, which will have the actuator, sensor, etc, I will be in charge of making sure that the human interface is powered at all times. I will also be responsible for the display. This will be what allows us to have a great exhibit that can be properly interacted with by the visitors at the showcase. Finally, I will also be in charge of establishing communication between the spinning top and using Wifi capabilities. This is what will allow my system to receive the speed data and possibly send out data to control the top.</p> Module # Available Needed Associated Pins UART 24 2 Any GPIO Pins(4-12,15-31)(Pins 36 and 37 specially designated) SPI 24 0 Any GPIO Pin(4-12,15-31)(depends on what peripheral is being used) I2C 24 1 Any GPIO Pin(4-12,15-31) GPIO 24 2 Any GPIO Pin(4-12,15-31) ADC 3 0 13, 14, and 18 LED PWM 24 0 Any GPIO Pin(4-12,15-31) Motor PWM 24 0 Any GPIO Pin(4-12,15-31) USB Programmer 2 1 13 and 14 (GPIO19 and 20) <p>Conclusion:</p> <p>Overall, the ESP32 works wonderfully as a microcontroller for my system. It fulfills the project requirement and has many functions that work well with my goals and ideas. It has all the compatible systems needed for my peripherals, including I2C, UART, and GPIO pins. It also has many of these pins available, so worrying about where on the board to place components should not be too much of a problem. The ESP32 also has a low current requirement and only needs a voltage regulator to be powered. It also comes with an antenna, so no additional hardware will be required.</p>"},{"location":"Component%20Selection%20and%20Power%20Budget/#power-budget","title":"Power Budget","text":"<p>Spreadsheet Link</p> <p>Using the power budget above, I was able to determine that I would have some freedoms with selecting a power supply. Aside from the ESP, the components needed for this project did not take up very much current. This allowed me to look at a variety of different power supplies without having to worry about current very much, and concentrate on factors like cost, reliability, size, and efficiency. Also, since the HMI is going to run independently, I do not have to worry about other systems drawing current.</p> <p>Major Component Selection:</p> Component Optimal Selection Microcontroller ESP32-S3-WROOM-1-N4 OLED Screen Teyleten Robot 0.96 inch LCD OLED Display Board Module 12864 128X64 IIC I2C SSD1306 Driver 4 Pins for Raspberry Pi Arduino Power Supply 1300mAh High-Capacity Lithium-Ion Long-Lasting 9-Volt Batteries Voltage Regulator LM2675MX-3.3/NOPB"},{"location":"Component%20Selection%20and%20Power%20Budget/#major-component-decision-making-process","title":"Major Component Decision Making Process","text":"<p>The ESP was a very simple decision for the microcontroller, since it had the proper I2C communication, Wifi communication, and more than enough GPIO pins. The OLED screen was a choice I made since it was one I was familiar with and would be able to properly display the required information, as well as not requiring very much current. The Power supply was selected for its cost-friendly price, as well as being reusable and having more than enough current to supply the entire circuit. Finally, the voltage regulator was selected since it would be easier to solder, as well as meet all other requirements for a voltage regulator.</p>"},{"location":"Schematic%20And%20BOM/","title":"Schematic And BOM","text":"<p>Human Interface Schematic</p> <p></p> <p>PDF</p> <p>ZIP File</p> <p>Bill of Materials:</p> Part Name Unit Quantity Cost Per Unit Total Cost Manufacturer Manufacturer Part # Vendor Link Datasheet Link Supplier Supplier Part # # Ordered Date Ordered #Received Surplus Designator 100 uF Capacitor 1 $0.43 $0.43 Murata Electronics GRM31CD80J107MEA8K https://www.digikey.com/en/products/detail/murata-electronics/GRM31CD80J107MEA8K/13905021 https://www.murata.com/en-us/api/pdfdownloadapi?cate=luCeramicCapacitorsSMD&amp;partno=GRM31CD80J107MEA8%23 Digikey 490-GRM31CD80J107MEA8KTR-ND 3 2/28 0 -3 C1 10 nF Capacitor 1 $0.08 $0.08 Murata Electronics GRM155R71C103KA01D https://www.digikey.com/en/products/detail/murata-electronics/GRM155R71C103KA01D/587215 https://search.murata.co.jp/Ceramy/image/img/A01X/G101/ENG/GRM155R71C103KA01-01.pdf Digikey 490-1313-2-ND 3 2/28 0 -3 C2 68 uF Capacitor 1 $0.91 $0.91 TDK Corporation C3216X5R0J686M160AB https://www.digikey.com/en/products/detail/tdk-corporation/C3216X5R0J686M160AB/3951907 https://product.tdk.com/system/files/dam/doc/product/capacitor/ceramic/mlcc/catalog/mlcc_commercial_general_en.pdf Digikey 445-14671-2-ND 3 2/28 0 -3 C3 3.3V 500 MW Diode 1 $0.13 $0.13 Panjit International Inc. MMSZ5226B_R1_00001 https://www.digikey.com/en/products/detail/panjit-international-inc/MMSZ5226B-R1-00001/14660759 https://www.panjit.com.tw/upload/datasheet/MMSZ5221B_SERIES.pdf Digikey 3757-MMSZ5226B_R1_00001TR-ND 3 2/28 0 -3 D1 47 uH Inductor 1 $0.11 $0.11 Taiyo Yuden LB3218T470K https://www.digikey.com/en/products/detail/taiyo-yuden/LB3218T470K/1788929 https://mm.digikey.com/Volume0/opasdata/d220001/medias/docus/610/LB3218T470K_SS.pdf Digikey 587-2037-2-ND 3 2/28 0 -3 L1 10K Resistors 2 $0.10 $0.20 YAGEO RC1206FR-0710KL https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483 https://www.yageo.com/upload/media/product/products/datasheet/rchip/PYu-RC_Group_51_RoHS_L_12.pdf Digikey 311-10.0KFRTR-ND 6 2/28 0 -6 R1,R2 5K Resistors 5 $0.17 $0.85 YAGEO RT0603BRE075KL https://www.digikey.com/en/products/detail/yageo/RT0603BRE075KL/7708365 https://www.yageo.com/upload/media/product/app/datasheet/rchip/pyu-rt_1-to-0.01_rohs_l.pdf Digikey 13-RT0603BRE075KLTR-ND 15 2/28 0 -15 R3,R4,R5,R6,R7 330 Ohm Resistors 2 $0.10 $0.20 YAGEO RC0603JR-07330RL https://www.digikey.com/en/products/detail/yageo/RC0603JR-07330RL/726769 https://www.yageo.com/upload/media/product/products/datasheet/rchip/PYu-RC_Group_51_RoHS_L_12.pdf Digikey 311-330GRTR-ND 6 2/28 0 -6 R8, R9 LED 2 $0.14 $0.28 W\u00fcrth Elektronik 150060GS75000 https://www.digikey.com/en/products/detail/w%C3%BCrth-elektronik/150060GS75000/4489898 https://www.we-online.com/components/products/datasheet/150060GS75000.pdf Digikey 732-4971-2-ND 6 2/28 0 -6 D2, D3 1.5 A Fuses 2 $0.75 $1.50 Littelfuse Inc. 022501.5MXP https://www.digikey.com/en/products/detail/littelfuse-inc/022501.5MXP/777788?&amp;utm_adgroup=&amp;utm_term=&amp;utm_content=&amp;gad_source=1 https://www.littelfuse.com/assetdocs/littelfuse-fuse-224-225-datasheet?assetguid=26e6ad94-5fb7-4bad-acf6-da1c91c16d87 Digikey F4663-ND 6 2/28 0 -6 F1, F2 Fuse Holder 2 $0.81 $1.62 Keystone Electronics 4628 https://www.digikey.com/en/products/detail/keystone-electronics/4628/2137316?&amp;utm_adgroup=&amp;utm_term=&amp;utm_content=&amp;gad_source=1 https://www.keyelco.com/userAssets/file/M65p44.pdf Digikey 36-4628-ND 6 2/28 0 -6 F1, F2 Barrel Jack 1 $0.60 $0.60 Same Sky (Formerly CUI Devices) PJ-037A https://www.digikey.com/en/products/detail/same-sky-formerly-cui-devices/PJ-037A/1644545 https://www.cuidevices.com/product/resource/pj-037a.pdf Digikey CP-037A-ND 3 2/28 0 -3 J1 Pushbuttons 5 $1.00 $5.00 Omron Electronics Inc-EMC Div B3U-1000P https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3U-1000P/1534338 https://omronfs.omron.com/en_US/ecb/products/pdf/en-b3u.pdf Digikey SW1020TR-ND 15 2/28 0 -3 SW1, SW2, SW3, SW4, SW5 USB Connector 1 $0.77 $0.77 GCT USB3131-30-0230-A https://www.digikey.com/en/products/detail/gct/USB3131-30-0230-A/9859642 https://gct.co/files/specs/usb3131-spec.pdf Digikey 2073-USB3131-30-0230-ATR-ND 0 2/28 0 0 J2 OLED Screen 1 $2.58 $2.58 Teyleten Robot Teyleten Robot 0.96 inch LCD OLED Display Board Module 12864 128X64 IIC I2C SSD1306 Driver 4 Pins for Raspberry Pi Arduino(5pcs, White Light) https://www.amazon.com/Teyleten-Robot-Display-SSD1306-Raspberry/dp/B0CN373JF4 https://www.amazon.com/stores/TeyletenRobot/page/DFDBA3C7-4121-4BCB-81FA-81C7FFF2F3E0 Amazon N/A 0 2/28 0 0 X1 3.3V Voltage Regulator 1 $4.36 $4.36 Texas Instruments LM2675MX-3.3/NOPB https://www.digikey.com/en/products/detail/texas-instruments/LM2675MX-3-3-NOPB/366907 https://www.ti.com/general/docs/suppproductinfo.tsp?distId=10&amp;gotoUrl=https%3A%2F%2Fwww.ti.com%2Flit%2Fgpn%2Flm2675 Digikey LM2675MX-3.3/NOPBTR-ND 3 2/28 0 -3 U1 ESP-32 Microcontroller 1 $5.06 $5.06 Espressif Systems ESP32-S3-WROOM-1-N4 https://www.digikey.com/en/products/detail/espressif-systems/ESP32-S3-WROOM-1-N4/16162639 https://www.espressif.com/sites/default/files/documentation/esp32-s3-wroom-1_wroom-1u_datasheet_en.pdf Digikey 1965-ESP32-S3-WROOM-1-N4TR-ND 0 2/28 0 0 U2 Ribbon Headers 2 $0.97 $1.94 W\u00fcrth Elektronik 61200821621 https://www.digikey.com/en/products/detail/w-rth-elektronik/61200821621/4846916?&amp;utm_adgroup=&amp;utm_term=&amp;utm_content=&amp;gad_source=1\\ https://www.we-online.com/components/products/datasheet/61200821621.pdf Digikey 732-5395-ND 6 2/28 0 -6 A1, A2 Battery 1 $5.99 $5.99 LCLEBM 9V Rechargeable Batteries, 1300mAh High Capacity Lithium-ion Long Lasting 9 Volt Batteries with 2 in 1 USB C Fast Charging Cable for Smoke Alarms,Microphone,Multimeters,Toys,Game Controllers (2 Count) https://www.amazon.com/PAISUE-Rechargeable-Lithium-ion-Multimeter-Microphone/dp/B0B248DSFG?source=ps-sl-shoppingads-lpcontext&amp;ref_=fplfs&amp;smid=A2WEVNKRB72JGE&amp;gQT=1&amp;th=1 https://www.amazon.com/stores/LCLEBM/page/EAF08C0E-7600-41D2-89CC-C505C3649A70/feed Amazon n/a 2 2/28 0 -2"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}